#
# Updater-script for IC
#

package_extract_dir("tools", "/tmp");
set_perm_recursive(0, 0, 0777, 0777, "/tmp");

if
    file_getprop("/tmp/aroma-data/wipe.prop","selected.0") == "2"
then
set_progress(0.01);
    ui_print("@Executing Full Wipe");
    ui_print("-- Erasing & formatting /cache as EXT4");
    assert(unmount("/cache") || ui_print("(Cache is unmounted already)"));
    format("ext4", "EMMC", "/dev/block/mmcblk0p36", "0", "/cache");
set_progress(0.02);
	ui_print("-- Erasing & formatting /system as EXT4");
    assert(unmount("/system") || ui_print("(System is unmounted already)"));
	format("ext4", "EMMC", "/dev/block/mmcblk0p35", "0", "/system");
set_progress(0.03);
    ui_print("-- Erasing & formatting /data as EXT4");
    assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p37", "/data") || ui_print("(Data is mounted already)"));
    run_program("/tmp/wipe.sh");;

set_progress(0.04);

    ui_print("-- Removing system files from SD card");
    delete_recursive("/sdcard/.android_secure");
    delete_recursive("/sdcard/.bookmark_thumb1");
    delete_recursive("/sdcard/.data");
    delete_recursive("/sdcard/Android");
    delete_recursive("/sdcard/bugreports");
    delete_recursive("/sdcard/LazyList");
    delete_recursive("/sdcard/LOST.DIR");
    delete_recursive("/sdcard/tmp");
    run_program("/sbin/sleep", "2");
set_progress(0.05);
    ui_print("-- Checking filesystems for errors");
    run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p35");
    run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p36");
    run_program("/sbin/e2fsck", "-p", "/dev/block/mmcblk0p37");
    run_program("/sbin/sleep", "2");
endif;

##########################Installation##########################

ui_print("@Installing ROM");
show_progress(0.07, 9);
ui_print("-- Writing Data");
assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p37", "/data") || ui_print("(data is mounted already)"));
package_extract_dir("data", "/data");

show_progress(0.7,1380);
assert(unmount("/system") || ui_print("(System is unmounted already)"));
format("ext4", "EMMC", "/dev/block/mmcblk0p35", "0", "/system");
ui_print("-- Writing System");
assert(mount("ext4", "EMMC", "/dev/block/mmcblk0p35", "/system") || ui_print("(system is mounted already)"));
package_extract_dir("system", "/system");

#########################Begin of AROMA#########################

#########################HTC Hacks##############################


if
    file_getprop("/tmp/aroma-data/htchacks.prop","item.0.1") == "1"
then
    ui_print("-- Removing 3-DOT Black Bar");
    package_extract_file("additions/htchacks/menu/menu.sh", "/tmp/menu.sh");
    set_perm(0, 0, 0777, "/tmp/menu.sh");
    run_program("/tmp/menu.sh");
    delete("/tmp/menu.sh");
endif;


if
    file_getprop("/tmp/aroma-data/htchacks.prop","item.0.2") == "1"
then
    ui_print("-- Disabling Software Rendering");
    package_extract_dir("additions/htchacks/gpu", "/system");
endif;


if
    file_getprop("/tmp/aroma-data/htchacks.prop","item.0.3") == "1"
then
    ui_print("-- Disabling Fastdormancy");
    package_extract_file("additions/htchacks/dormancy/dormancy.sh", "/tmp/dormancy.sh");
	set_perm(0, 0, 0777, "/tmp/dormancy.sh");
    run_program("/tmp/dormancy.sh");
endif;

if 
    file_getprop("/tmp/aroma-data/htchacks.prop","item.0.4") == "1"
then
    ui_print("-- Installing Xposed Framework and App");
    package_extract_dir("additions/htchacks/xposed", "/system");

endif;



if 
    file_getprop("/tmp/aroma-data/htchacks.prop","item.0.5") == "1"
then
    ui_print("-- Installing Volume Wake");
    package_extract_dir("additions/htchacks/volwake", "/system");

endif;

if 
    file_getprop("/tmp/aroma-data/htchacks.prop","item.0.6") == "1"
then
    ui_print("-- Installing GEL");
    package_extract_file("additions/launcher/GoogleHome.apk", "/system/app/GoogleHome.apk");
	delete("/system/priv-app/Launcher2.apk");

endif;

#######################GAPPS REMOVE################################


if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.1") == "1"
then
    ui_print("-- Removing Google Mail");
    delete("/system/app/Gmail2.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.2") == "1"
then
    ui_print("-- Removing Google Maps");
    delete("/system/app/GMS_Maps.apk");
    delete("/system/app/Street.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.3") == "1"
then
    ui_print("-- Removing Google News");
    delete("/system/app/GenieWidget.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.4") == "1"
then
    ui_print("-- Removing Google Now (Search)");
    delete("/system/app/Velvet.apk");
	delete("/system/app/VoiceSearchStub.apk");
    delete_recursive("/system/usr/srec/en-US");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.5") == "1"
then
    ui_print("-- Removing Google Plus");
    delete("/system/app/PlusOne.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.6") == "1"
then
    ui_print("-- Removing Google Hangouts");
    delete("/system/app/Hangouts.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.7") == "1"
then
    ui_print("-- Removing Google TTS");
    delete("/system/app/GoogleTTS.apk");
    delete("/system/lib/libspeexwrapper.so");
    delete_recursive("/system/tts");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.8") == "1"
then
    ui_print("-- Removing Google Chrome");
    delete("/system/app/Chrome.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.9") == "1"
then
    ui_print("-- Removing Google Music");
    delete("/system/app/Music2.apk");
endif;

if
    file_getprop("/tmp/aroma-data/googleremove.prop","item.0.10") == "1"
then
    ui_print("-- Removing Google Drive");
    delete("/system/app/GoogleDrive.apk");
endif;



##########################VRTHEME###############################

#ui_print("@Extracting VRTheme");
#package_extract_dir("tools/vrtheme", "/sdcard/vrtheme");
#set_perm(0, 0, 0755, "/sdcard/vrtheme/installtheme.sh");
#set_perm(0, 0, 0755, "/sdcard/vrtheme/zip");
#set_perm(0, 0, 0755, "/sdcard/vrtheme/cleanup.sh");
#set_perm(0, 0, 0755, "/sdcard/vrtheme/zipalign");

#########################HTC HACK VR THEME ##############################################


##########################VRTHEME-APPLY###############################

#ui_print("@Applying Theme");
#run_program("/sdcard/vrtheme/installtheme.sh");
#ui_print("@Cleaning VRTheme");
#run_program("/sdcard/vrtheme/cleanup.sh");

##########################End of AROMA##########################

#######################Creating Symlinks########################

ui_print("@Symlinking and permissions");

set_progress(0.9);
ui_print("-- Creating toolbox symlinks");
symlink("toolbox", "/system/bin/cat", "/system/bin/chcon",
        "/system/bin/chmod", "/system/bin/chown", "/system/bin/clear",
        "/system/bin/cmp", "/system/bin/cp", "/system/bin/date",
        "/system/bin/dd", "/system/bin/df", "/system/bin/dmesg",
        "/system/bin/du", "/system/bin/getenforce", "/system/bin/getevent",
        "/system/bin/getprop", "/system/bin/getsebool", "/system/bin/grep",
        "/system/bin/hd", "/system/bin/id", "/system/bin/ifconfig",
        "/system/bin/iftop", "/system/bin/insmod", "/system/bin/ioctl",
        "/system/bin/ionice", "/system/bin/kill", "/system/bin/ln",
        "/system/bin/load_policy", "/system/bin/log", "/system/bin/ls",
        "/system/bin/lsmod", "/system/bin/lsof", "/system/bin/md5",
        "/system/bin/mkdir", "/system/bin/mkswap", "/system/bin/mount",
        "/system/bin/mv", "/system/bin/nandread", "/system/bin/netstat",
        "/system/bin/newfs_msdos", "/system/bin/notify", "/system/bin/printenv",
        "/system/bin/ps", "/system/bin/r", "/system/bin/readlink",
        "/system/bin/renice", "/system/bin/restorecon", "/system/bin/rm",
        "/system/bin/rmdir", "/system/bin/rmmod", "/system/bin/route",
        "/system/bin/runcon", "/system/bin/schedtop", "/system/bin/sendevent",
        "/system/bin/setconsole", "/system/bin/setenforce",
        "/system/bin/setprop", "/system/bin/setsebool", "/system/bin/sleep",
        "/system/bin/smd", "/system/bin/start", "/system/bin/stop",
        "/system/bin/swapoff", "/system/bin/swapon", "/system/bin/sync",
        "/system/bin/top", "/system/bin/touch", "/system/bin/umount",
        "/system/bin/uptime", "/system/bin/vmstat", "/system/bin/watchprops",
        "/system/bin/wipe");

ui_print("-- Creating additional symlinks");
symlink("Roboto-Bold.ttf", "/system/fonts/DroidSans-Bold.ttf");
symlink("Roboto-Regular.ttf", "/system/fonts/DroidSans.ttf");
symlink("libGLESv2.so", "/system/lib/libGLESv3.so");
symlink("mksh", "/system/bin/sh");
symlink("/system/lib/modules/moc_crypto.ko.3.4.10","/system/lib/modules/moc_crypto.ko");
symlink("/system/lib/modules/moc_platform_mod.ko.3.4.10","/system/lib/modules/moc_platform_mod.ko");



ui_print("-- Installing busybox");
set_perm(0, 1000, 0755, "/system/xbin/busybox");
run_program("/system/xbin/busybox", "--install", "-s", "/system/xbin");

#######################Setting Permissions######################

set_progress(0.93);
ui_print("-- Setting permissions");
set_metadata_recursive("/system", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/bin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/app_process", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:zygote_exec:s0");
set_metadata("/system/bin/clatd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:clatd_exec:s0");
set_metadata("/system/bin/debuggerd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:debuggerd_exec:s0");
set_metadata("/system/bin/dhcpcd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dhcp_exec:s0");
set_metadata("/system/bin/dnsmasq", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:dnsmasq_exec:s0");
set_metadata("/system/bin/drmserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:drmserver_exec:s0");
set_metadata("/system/bin/hostapd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:hostapd_exec:s0");
set_metadata("/system/bin/installd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:installd_exec:s0");
set_metadata("/system/bin/keystore", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:keystore_exec:s0");
set_metadata("/system/bin/mediaserver", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mediaserver_exec:s0");
set_metadata("/system/bin/mksh", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:shell_exec:s0");
set_metadata("/system/bin/mtpd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:mtp_exec:s0");
set_metadata("/system/bin/netcfg", "uid", 0, "gid", 3003, "mode", 02750, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/bin/netd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:netd_exec:s0");
set_metadata("/system/bin/ping", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ping_exec:s0");
set_metadata("/system/bin/pppd", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:ppp_exec:s0");
set_metadata("/system/bin/racoon", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:racoon_exec:s0");
set_metadata("/system/bin/rild", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:rild_exec:s0");
set_metadata("/system/bin/run-as", "uid", 0, "gid", 2000, "mode", 0750, "capabilities", 0xc0, "selabel", "u:object_r:runas_exec:s0");
set_metadata("/system/bin/sdcard", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:sdcardd_exec:s0");
set_metadata("/system/bin/servicemanager", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:servicemanager_exec:s0");
set_metadata("/system/bin/surfaceflinger", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:surfaceflinger_exec:s0");
set_metadata("/system/bin/vold", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:vold_exec:s0");
set_metadata("/system/bin/wpa_supplicant", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:wpa_exec:s0");
set_metadata_recursive("/system/etc/dhcpcd", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata("/system/etc/dhcpcd/dhcpcd-run-hooks", "uid", 1014, "gid", 2000, "mode", 0550, "capabilities", 0x0, "selabel", "u:object_r:dhcp_system_file:s0");
set_metadata_recursive("/system/etc/init.d", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/etc/init.d", "uid", 0, "gid", 0, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/etc/ppp", "uid", 0, "gid", 0, "dmode", 0755, "fmode", 0555, "capabilities", 0x0, "selabel", "u:object_r:ppp_system_file:s0");
set_metadata("/system/vendor", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/vendor/etc", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/etc/audio_effects.conf", "uid", 0, "gid", 0, "mode", 0644, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/firmware/keymaster", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/vendor/lib", "uid", 0, "gid", 2000, "mode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata_recursive("/system/xbin", "uid", 0, "gid", 2000, "dmode", 0755, "fmode", 0755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/librank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/procmem", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/procrank", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:system_file:s0");
set_metadata("/system/xbin/su", "uid", 0, "gid", 0, "mode", 06755, "capabilities", 0x0, "selabel", "u:object_r:su_exec:s0"); 

######################Special permission for SuperSU############


######################Kernel Installation#######################

ui_print("@Installing Kernel");
assert(package_extract_file("boot.img", "/tmp/boot.img"),
run_program("/sbin/dd", "if=/tmp/boot.img", "of=/dev/block/mmcblk0p33"));


########################Odexing Process#########################

if
    file_getprop("/tmp/aroma-data/odex.prop","selected.0") == "2"
then
ui_print("@Starting ODEX process. It might take a while");
assert(run_program("/tmp/odex.sh"));
run_program("/sbin/sleep", "2");
endif;
########################Cleaning Process########################

    ui_print("@Erasing Cache & Dalvik-Cache");
    assert(unmount("/cache") || ui_print("(cache is unmounted already)"));
    format("ext4", "EMMC", "/dev/block/mmcblk0p36", "0", "/cache");
    delete_recursive("/data/dalvik-cache");
    delete_recursive("/data/resource-cache");

###########################Unmounting###########################

assert(unmount("/data") || ui_print("(data is unmounted already)"));
assert(unmount("/system") || ui_print("(system is unmounted already)"));
set_progress(1.0);
ui_print("");
ui_print("Installation Complete!");
run_program("/sbin/busybox", "cp", "/tmp/recovery.log", "/sdcard/recovery.log");
run_program("/sbin/sleep", "5");
